<Window x:Class="LightBulb.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:models="clr-namespace:LightBulb.Models"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        x:Name="Window"
        Title="LightBulb"
        Width="280"
        Height="280"
        AllowsTransparency="True"
        Background="Transparent"
        DataContext="{Binding Main, Source={StaticResource Locator}}"
        Deactivated="MainWindow_OnDeactivated"
        FontFamily="{DynamicResource MaterialDesignFont}"
        Icon="/LightBulb;component/favicon.ico"
        Loaded="MainWindow_OnLoaded"
        ShowInTaskbar="False"
        SnapsToDevicePixels="True"
        TextElement.FontSize="13"
        TextElement.FontWeight="Regular"
        TextElement.Foreground="{DynamicResource SecondaryTextBrush}"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Topmost="True"
        UseLayoutRounding="True"
        WindowStartupLocation="Manual"
        WindowStyle="None"
        mc:Ignorable="d">
    <Border Background="{DynamicResource PrimaryHueDarkBrush}"
            BorderBrush="{DynamicResource MiscBrush}"
            BorderThickness="2"
            CornerRadius="12,12,0,0">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!--  Tray icon  -->
            <tb:TaskbarIcon x:Name="TaskbarIcon"
                            Grid.Row="0"
                            DoubleClickCommand="{Binding ShowMainWindowCommand}"
                            IconSource="/LightBulb;component/favicon.ico">
                <tb:TaskbarIcon.TrayToolTip>
                    <Border Background="{DynamicResource MaterialDesignPaper}"
                            BorderBrush="{DynamicResource MiscBrush}"
                            BorderThickness="2"
                            CornerRadius="6"
                            TextElement.FontSize="13"
                            TextElement.FontWeight="Regular"
                            TextElement.Foreground="{DynamicResource SecondaryTextBrush}"
                            TextOptions.TextFormattingMode="Ideal"
                            TextOptions.TextRenderingMode="Auto">
                        <Grid Margin="5">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0"
                                       FontSize="14"
                                       FontWeight="Bold"
                                       Foreground="{DynamicResource PrimaryTextBrush}"
                                       Text="LightBulb" />
                            <TextBlock Grid.Row="1" Text="{Binding StatusText}" />
                        </Grid>
                    </Border>
                </tb:TaskbarIcon.TrayToolTip>
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{Binding ShowMainWindowCommand}" Header="Configure">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Settings" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{Binding ToggleEnabledCommand}">
                            <MenuItem.Style>
                                <Style BasedOn="{StaticResource {x:Type MenuItem}}" TargetType="{x:Type MenuItem}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsEnabled}" Value="True">
                                            <Setter Property="Header" Value="Disable" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding IsEnabled}" Value="False">
                                            <Setter Property="Header" Value="Enable" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </MenuItem.Style>
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Power" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Disable for...">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="PowerSettings" />
                            </MenuItem.Icon>
                            <MenuItem Command="{Binding DisableTemporarilyCommand}"
                                      CommandParameter="60000"
                                      Header="1 minute" />
                            <MenuItem Command="{Binding DisableTemporarilyCommand}"
                                      CommandParameter="300000"
                                      Header="5 minutes" />
                            <MenuItem Command="{Binding DisableTemporarilyCommand}"
                                      CommandParameter="1800000"
                                      Header="30 minutes" />
                            <MenuItem Command="{Binding DisableTemporarilyCommand}"
                                      CommandParameter="3600000"
                                      Header="1 hour" />
                            <MenuItem Command="{Binding DisableTemporarilyCommand}"
                                      CommandParameter="5400000"
                                      Header="3 hours" />
                            <MenuItem Command="{Binding DisableTemporarilyCommand}"
                                      CommandParameter="10800000"
                                      Header="6 hours" />
                            <MenuItem Command="{Binding DisableTemporarilyCommand}"
                                      CommandParameter="21600000"
                                      Header="12 hours" />
                            <MenuItem Command="{Binding DisableTemporarilyCommand}"
                                      CommandParameter="43200000"
                                      Header="1 day" />
                        </MenuItem>
                        <MenuItem Command="{Binding AboutCommand}" Header="About">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="Web" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{Binding ExitApplicationCommand}" Header="Exit">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="ExitToApp" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
            </tb:TaskbarIcon>

            <!--  Header  -->
            <Border x:Name="HeaderBorder"
                    Grid.Row="0"
                    Height="50"
                    Padding="5,0,0,0"
                    Background="{DynamicResource PrimaryHueMidBrush}"
                    BorderBrush="{DynamicResource MiscBrush}"
                    BorderThickness="0,0,0,1"
                    CornerRadius="12,12,0,0"
                    MouseDown="HeaderBorder_OnMouseDown"
                    TextElement.Foreground="{DynamicResource PrimaryHueMidForegroundBrush}">
                <Grid Margin="0,5,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!--  On/Off button and logo  -->
                    <ToggleButton Grid.Column="0"
                                  VerticalAlignment="Center"
                                  IsChecked="{Binding IsEnabled}"
                                  ToolTip="Enable or disable the gamma control">
                        <ToggleButton.Style>
                            <Style BasedOn="{StaticResource MaterialDesignActionAccentToggleButton}" TargetType="{x:Type ToggleButton}">
                                <Setter Property="materialDesign:ToggleButtonAssist.OnContent">
                                    <Setter.Value>
                                        <materialDesign:PackIcon Kind="LightbulbOutline" />
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.Style>
                    </ToggleButton>

                    <!--  Application name and version  -->
                    <TextBlock Grid.Column="1"
                               Margin="5,0,0,0"
                               VerticalAlignment="Center">
                        <Run FontSize="16"
                             FontWeight="Bold"
                             Foreground="{DynamicResource PrimaryInverseTextBrush}"
                             Text="LightBulb" />
                        <Run Text="v" /><Run Text="{Binding Version, Mode=OneWay}" />
                    </TextBlock>

                    <!--  Version updates  -->
                    <Button Grid.Column="2"
                            Padding="4"
                            Background="Transparent"
                            BorderThickness="0"
                            Command="{Binding DownloadNewVersionCommand}"
                            ToolTip="New version available for download"
                            Visibility="{Binding IsUpdateAvailable, Converter={StaticResource BoolToVisibilityConverter}}">
                        <materialDesign:PackIcon Kind="AlertCircleOutline" />
                    </Button>

                    <!--  Section navigation buttons  -->
                    <WrapPanel Grid.Column="3"
                               Margin="5,0,5,0"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Center"
                               Orientation="Horizontal">
                        <Button x:Name="NavigateGeneralSettingsButton"
                                BorderThickness="0,0,0,2"
                                Click="NavigateGeneralSettingsButton_OnClick"
                                Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                Style="{StaticResource FlatButtonStyle}"
                                ToolTip="General">
                            <materialDesign:PackIcon Kind="Tune" />
                        </Button>
                        <Button x:Name="NavigateGeolocationSettingsButton"
                                BorderThickness="0,0,0,2"
                                Click="NavigateGeoSettingsButton_OnClick"
                                Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                Style="{StaticResource FlatButtonStyle}"
                                ToolTip="Geolocation">
                            <materialDesign:PackIcon Kind="Earth" />
                        </Button>
                        <Button x:Name="NavigateAdvancedSettingsButton"
                                BorderThickness="0,0,0,2"
                                Click="NavigateAdvancedSettingsButton_OnClick"
                                Foreground="{DynamicResource PrimaryHueMidForegroundBrush}"
                                Style="{StaticResource FlatButtonStyle}"
                                ToolTip="Advanced">
                            <materialDesign:PackIcon Kind="CheckboxMultipleMarkedOutline" />
                        </Button>
                    </WrapPanel>
                </Grid>
            </Border>

            <!--  Content  -->
            <Border Grid.Row="1"
                    Background="{DynamicResource MaterialDesignPaper}"
                    TextElement.Foreground="{DynamicResource SecondaryTextBrush}">
                <ContentPresenter x:Name="ViewPresenter"
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Stretch" />
            </Border>

            <!--  Status bar  -->
            <Border Grid.Row="2"
                    BorderBrush="{DynamicResource MiscBrush}"
                    TextElement.Foreground="{DynamicResource SecondaryInverseTextBrush}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <!--  Cycle position  -->
                    <ProgressBar Grid.Row="0"
                                 Height="2"
                                 Foreground="{DynamicResource SecondaryAccentBrush}"
                                 Maximum="1"
                                 Minimum="0"
                                 Value="{Binding CyclePosition, Mode=OneWay}" />

                    <!--  Cycle state and status text  -->
                    <WrapPanel Grid.Row="1"
                               Margin="5"
                               Orientation="Horizontal">
                        <!--  Cycle state icon  -->
                        <materialDesign:PackIcon Background="Transparent" ToolTip="{Binding CycleState}">
                            <materialDesign:PackIcon.Style>
                                <Style BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}" TargetType="{x:Type materialDesign:PackIcon}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CycleState}" Value="{x:Static models:CycleState.Disabled}">
                                            <Setter Property="Kind" Value="SyncOff" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding CycleState}" Value="{x:Static models:CycleState.Transition}">
                                            <Setter Property="Kind" Value="Sync" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding CycleState}" Value="{x:Static models:CycleState.Day}">
                                            <Setter Property="Kind" Value="WhiteBalanceSunny" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding CycleState}" Value="{x:Static models:CycleState.Night}">
                                            <Setter Property="Kind" Value="WeatherNight" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </materialDesign:PackIcon.Style>
                        </materialDesign:PackIcon>
                        <!--  Status text  -->
                        <TextBlock Margin="3,0,0,0"
                                   VerticalAlignment="Center"
                                   FontSize="12"
                                   Text="{Binding StatusText}" />
                    </WrapPanel>
                </Grid>
            </Border>
        </Grid>
    </Border>
</Window>