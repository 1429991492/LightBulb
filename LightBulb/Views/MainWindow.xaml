<Window x:Class="LightBulb.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:models="clr-namespace:LightBulb.Models"
        xmlns:tb="http://www.hardcodet.net/taskbar"
        x:Name="Window"
        Title="LightBulb"
        Width="300"
        Height="340"
        AllowsTransparency="True"
        Background="Transparent"
        DataContext="{Binding Main, Source={StaticResource Locator}}"
        Deactivated="MainWindow_OnDeactivated"
        FontFamily="{DynamicResource MaterialDesignFont}"
        Icon="/LightBulb;component/favicon.ico"
        Loaded="MainWindow_OnLoaded"
        ShowInTaskbar="False"
        SnapsToDevicePixels="True"
        TextElement.FontSize="13"
        TextElement.FontWeight="Regular"
        TextElement.Foreground="{DynamicResource SecondaryTextBrush}"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        UseLayoutRounding="True"
        WindowStartupLocation="Manual"
        WindowStyle="None"
        mc:Ignorable="d">
    <Border Background="{DynamicResource PrimaryHueDarkBrush}"
            BorderBrush="{DynamicResource MiscBrush}"
            BorderThickness="2"
            CornerRadius="12,12,0,0">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!--  Tray icon  -->
            <tb:TaskbarIcon x:Name="TaskbarIcon"
                            Grid.Row="0"
                            DoubleClickCommand="{Binding ShowMainWindowCommand}"
                            IconSource="/LightBulb;component/favicon.ico"
                            ToolTipText="LightBulb">
                <tb:TaskbarIcon.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{Binding ShowMainWindowCommand}" Header="Configure" />
                        <MenuItem Command="{Binding ToggleEnabledCommand}" Header="Toggle On/Off" />
                        <MenuItem Command="{Binding ExitApplicationCommand}" Header="Exit" />
                    </ContextMenu>
                </tb:TaskbarIcon.ContextMenu>
            </tb:TaskbarIcon>

            <!--  Header  -->
            <Border x:Name="HeaderBorder"
                    Grid.Row="0"
                    Height="50"
                    Padding="5,0,0,0"
                    Background="{DynamicResource PrimaryHueDarkBrush}"
                    BorderBrush="{DynamicResource MiscBrush}"
                    BorderThickness="0,0,0,1"
                    CornerRadius="12,12,0,0"
                    MouseDown="HeaderBorder_OnMouseDown"
                    TextElement.Foreground="{DynamicResource PrimaryHueDarkForegroundBrush}">
                <Grid Margin="0,5,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <!--  On/Off button and logo  -->
                    <ToggleButton Grid.Column="0"
                                  VerticalAlignment="Center"
                                  IsChecked="{Binding IsEnabled}"
                                  ToolTip="Enable or disable the gamma control">
                        <ToggleButton.Style>
                            <Style BasedOn="{StaticResource MaterialDesignActionAccentToggleButton}" TargetType="{x:Type ToggleButton}">
                                <Setter Property="materialDesign:ToggleButtonAssist.OnContent">
                                    <Setter.Value>
                                        <materialDesign:PackIcon Kind="LightbulbOutline" />
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </ToggleButton.Style>
                        <ToggleButton.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding DisableTemporarilyCommand}"
                                          CommandParameter="60000"
                                          Header="Disable for 1 min" />
                                <MenuItem Command="{Binding DisableTemporarilyCommand}"
                                          CommandParameter="300000"
                                          Header="Disable for 5 mins" />
                                <MenuItem Command="{Binding DisableTemporarilyCommand}"
                                          CommandParameter="1800000"
                                          Header="Disable for 30 mins" />
                                <MenuItem Command="{Binding DisableTemporarilyCommand}"
                                          CommandParameter="3600000"
                                          Header="Disable for 1 hr" />
                                <MenuItem Command="{Binding DisableTemporarilyCommand}"
                                          CommandParameter="5400000"
                                          Header="Disable for 3 hrs" />
                                <MenuItem Command="{Binding DisableTemporarilyCommand}"
                                          CommandParameter="10800000"
                                          Header="Disable for 6 hrs" />
                                <MenuItem Command="{Binding DisableTemporarilyCommand}"
                                          CommandParameter="21600000"
                                          Header="Disable for 12 hrs" />
                                <MenuItem Command="{Binding DisableTemporarilyCommand}"
                                          CommandParameter="43200000"
                                          Header="Disable for 24 hrs" />
                            </ContextMenu>
                        </ToggleButton.ContextMenu>
                    </ToggleButton>

                    <!--  Application Name  -->
                    <TextBlock Grid.Column="1"
                               Margin="5,0,0,0"
                               VerticalAlignment="Center"
                               FontSize="16"
                               FontWeight="Bold"
                               Foreground="{DynamicResource PrimaryInverseTextBrush}"
                               Text="LightBulb" />

                    <!--  Section navigation buttons  -->
                    <WrapPanel Grid.Column="2"
                               Margin="5,0,5,0"
                               HorizontalAlignment="Right"
                               VerticalAlignment="Center"
                               Orientation="Horizontal">
                        <Button x:Name="NavigateGeneralSettingsButton"
                                Padding="4"
                                Background="Transparent"
                                BorderThickness="0"
                                Click="NavigateGeneralSettingsButton_OnClick"
                                ToolTip="General">
                            <materialDesign:PackIcon Kind="Settings" />
                        </Button>
                        <Button x:Name="NavigateGeolocationSettingsButton"
                                Padding="4"
                                Background="Transparent"
                                BorderThickness="0"
                                Click="NavigateGeolocationSettingsButton_OnClick"
                                ToolTip="Geolocation">
                            <materialDesign:PackIcon Kind="Earth" />
                        </Button>
                        <Button x:Name="NavigateAppRulesButton"
                                Padding="4"
                                Background="Transparent"
                                BorderThickness="0"
                                Click="NavigateAppRulesButton_OnClick"
                                ToolTip="Rules">
                            <materialDesign:PackIcon Kind="ViewDashboard" />
                        </Button>
                    </WrapPanel>
                </Grid>
            </Border>

            <!--  Content  -->
            <Frame x:Name="ContentFrame"
                   Grid.Row="1"
                   HorizontalAlignment="Stretch"
                   VerticalAlignment="Stretch"
                   Background="{DynamicResource MaterialDesignPaper}"
                   NavigationUIVisibility="Hidden"
                   Source="/LightBulb;component/Views/GeneralSettingsPage.xaml"
                   TextElement.Foreground="{DynamicResource SecondaryTextBrush}" />

            <!--  Status bar  -->
            <Border Grid.Row="2"
                    Padding="5"
                    BorderBrush="{DynamicResource MiscBrush}"
                    BorderThickness="0,1,0,0"
                    TextElement.Foreground="{DynamicResource SecondaryInverseTextBrush}">
                <WrapPanel Orientation="Horizontal">
                    <!--  Cycle state icon  -->
                    <materialDesign:PackIcon ToolTip="{Binding CycleState}">
                        <materialDesign:PackIcon.Style>
                            <Style BasedOn="{StaticResource {x:Type materialDesign:PackIcon}}" TargetType="{x:Type materialDesign:PackIcon}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CycleState}" Value="{x:Static models:CycleState.Disabled}">
                                        <Setter Property="Kind" Value="SyncOff" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CycleState}" Value="{x:Static models:CycleState.Transition}">
                                        <Setter Property="Kind" Value="Sync" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CycleState}" Value="{x:Static models:CycleState.Day}">
                                        <Setter Property="Kind" Value="WhiteBalanceSunny" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CycleState}" Value="{x:Static models:CycleState.Night}">
                                        <Setter Property="Kind" Value="WeatherNight" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </materialDesign:PackIcon.Style>
                    </materialDesign:PackIcon>
                    <!--  Status text  -->
                    <TextBlock Margin="3,0,0,0"
                               VerticalAlignment="Center"
                               FontSize="12"
                               Text="{Binding StatusText}" />
                </WrapPanel>
            </Border>
        </Grid>
    </Border>
</Window>
